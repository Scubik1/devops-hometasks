Vagrant.configure("2") do |config|
    config.vm.box = "generic/centos8s"
    config.vm.synced_folder  ".", "/vagrant", disabled: false
    config.vm.provider "virtualbox" do |vb|
        vb.memory = 512
    end

    config.vm.define "slave1.puppet" do |slave|
        slave.vm.network "private_network", ip: "192.168.50.10"
        slave.vm.provider("virtualbox") { |vb| vb.name = "slave1.puppet" }
        slave.vm.hostname = "slave1.puppet"
    end

    config.vm.define "slave2.puppet" do |slave|
        slave.vm.network "private_network", ip: "192.168.50.15"
        slave.vm.provider("virtualbox") { |vb| vb.name = "slave2.puppet" }
        slave.vm.hostname = "slave2.puppet"
    end
 
    config.vm.define "mineserver.puppet" do |mine|
        mine.vm.network "private_network", ip: "192.168.50.20"
        mine.vm.provider("virtualbox") { |vb| vb.name = "mineserver.puppet" }
        mine.vm.hostname = "mineserver.puppet"
    end   

    config.vm.define "master.puppet", primary: true do |master|
        master.vm.network "private_network", ip: "192.168.50.5"
        master.vm.hostname = "master.puppet"
        master.vm.provider "virtualbox" do |vb|
            vb.memory = 1024
            vb.name = "master.puppet"
        end
        master.vm.provision :file, source: '.vagrant/machines/slave1.puppet/virtualbox/private_key', destination: '/home/vagrant/.ssh/private_key_slave1'
        master.vm.provision :file, source: '.vagrant/machines/slave2.puppet/virtualbox/private_key', destination: '/home/vagrant/.ssh/private_key_slave2'
        master.vm.provision :file, source: '.vagrant/machines/mineserver.puppet/virtualbox/private_key', destination: '/home/vagrant/.ssh/private_key_mineserver'
        master.vm.provision "shell", inline: <<-shell
          chmod =600 /home/vagrant/.ssh/private_key_slave1
          chmod =600 /home/vagrant/.ssh/private_key_slave2
          chmod =600 /home/vagrant/.ssh/private_key_mineserver
        shell
        master.vm.provision "ansible_local" do |ansible|
            ansible.playbook = "playbook.yaml"
            ansible.limit = 'all'
            ansible.inventory_path = "inventory"
        end
    end
end